@model IEnumerable<AgriculturaWeb.Models.Empleado>

@{
    ViewBag.Title = "Empleados";
    var paginaActual = (int)ViewBag.PaginaActual;
    var totalPaginas = (int)ViewBag.TotalPaginas;
    string busqueda = ViewBag.Busqueda as string;
}

@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
        @TempData["Mensaje"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center mt-3 mb-3">
    <h2><i class="fa-solid fa-users text-success"></i> Lista de Empleados</h2>
    @Html.ActionLink("Nuevo Empleado", "Create", null, new { @class = "btn btn-success" })
</div>

<!-- 🔍 Buscador -->
<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="busqueda" value="@busqueda" class="form-control" placeholder="Buscar por nombre o apellido..." />
        <button type="submit" class="btn btn-primary">
            <i class="fa-solid fa-magnifying-glass"></i> Buscar
        </button>
    </div>
</form>

@if (Model.Any())
{
    <table class="table table-bordered table-striped shadow-sm">
        <thead class="table-dark text-center">
            <tr>
                <th>Nombres</th>
                <th>Apellidos</th>
                <th>DPI</th>
                <th>Teléfono</th>
                <th>Fecha Ingreso</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var e in Model)
            {
                <tr>
                    <td>@e.Nombres</td>
                    <td>@e.Apellidos</td>
                    <td>@e.DPI</td>
                    <td>@e.Telefono</td>
                    <td>@(e.FechaIngreso.HasValue ? e.FechaIngreso.Value.ToShortDateString() : "—")</td>
                    <td class="text-center">
                        @Html.ActionLink("Editar", "Edit", new { id = e.IdEmpleado }, new { @class = "btn btn-primary btn-sm me-2" })
                        @using (Html.BeginForm("Delete", "Empleados", new { id = e.IdEmpleado }, FormMethod.Post, new { onsubmit = "return confirm('¿Eliminar al empleado " + e.Nombres + "?');", style = "display:inline" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-sm">
                                <i class="fa-solid fa-trash"></i> Eliminar
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- 📄 Paginación -->
    <nav class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item @(paginaActual == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { busqueda, pagina = paginaActual - 1 })">Anterior</a>
            </li>

            @for (int i = 1; i <= totalPaginas; i++)
            {
                <li class="page-item @(i == paginaActual ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { busqueda, pagina = i })">@i</a>
                </li>
            }

            <li class="page-item @(paginaActual == totalPaginas ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { busqueda, pagina = paginaActual + 1 })">Siguiente</a>
            </li>
        </ul>
    </nav>
}
else
{
    <div class="alert alert-warning text-center mt-4">
        <i class="fa-solid fa-triangle-exclamation"></i> No se encontraron empleados.
    </div>
}
